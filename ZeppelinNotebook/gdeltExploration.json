{"paragraphs":[{"text":"%md\n## Exploration des donnees GDELT via Spark\nDans ce notebook nous allons commencer a explorer les donnees GDELT qu'on a stoque sur S3","user":"anonymous","dateUpdated":"2020-01-13T15:14:12+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Exploration des donnees GDELT via Spark</h2>\n<p>Dans ce notebook nous allons commencer a explorer les donnees GDELT qu&rsquo;on a stoque sur S3</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1578927690965_-1098813328","id":"20181212-102323_67420128","dateCreated":"2020-01-13T15:01:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:77","dateFinished":"2020-01-13T15:14:12+0000","dateStarted":"2020-01-13T15:14:12+0000"},{"text":"val AWS_ID = \"TODO\"\nval AWS_KEY = \"TODO\"\nval AWS_TOKEN = \"TODO\"\nval s3_name = \"TODO\"\n\n\nsc.hadoopConfiguration.set(\"fs.s3a.aws.credentials.provider\", \"org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider\")\nsc.hadoopConfiguration.set(\"fs.s3a.access.key\", AWS_ID) // mettre votre ID du fichier credentials.csv\nsc.hadoopConfiguration.set(\"fs.s3a.secret.key\", AWS_KEY) // mettre votre secret du fichier credentials.csv\nsc.hadoopConfiguration.set(\"fs.s3a.session.token\", AWS_TOKEN)","user":"anonymous","dateUpdated":"2020-01-13T15:39:24+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"AWS_ID: String = ASIA45PGNWCTQUOIXN2E\nAWS_KEY: String = 1fN4hAdkjH8Pj65/I/faZU5zcYFaC+q2nOBNeiSM\nAWS_TOKEN: String = FwoGZXIvYXdzEND//////////wEaDPmoPqa/bHd0Q0O3USLBAehejmRz5P1S0ZYKYU+BmVNAFUn9hPE8Gdl6WNydHNX6tXv6NWdrEABBycIz7MYHn/iQV/3fbvwvnVp5h6fIQna2gZ+txmXXxYF9UHd2klcVqJM62yS02bhjZreowSx86zTbiqZHThx0tVrhl8MeEA5acFK61CUXx00EBc9paQF4BXEQ0Lhr5IfQUFfPeBE1caHJCsAHhVQ3NMf5+EvzVKvMefPo3+P0PPIaEvt2ILeKuTMRDVIsAikqOEYjP8wFwvso54Xy8AUyLTWfBNFAeutP57ClJAzLbe3SRWsX2+XdHmTRIVqB5ZlLVM1ahKYFC1RZlwV3cA==\ns3_name: String = elattaoui-farid-telecom-gdelt-project-2019\n"}]},"apps":[],"jobName":"paragraph_1578927690970_-28722224","id":"20171217-230735_1688540039","dateCreated":"2020-01-13T15:01:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:78","dateFinished":"2020-01-13T15:30:00+0000","dateStarted":"2020-01-13T15:29:58+0000"},{"text":"%md Les fichiers sont stoquees compresses, on a besoin d'un bout de code pour les decompresser en parallel sur les workers au fur et a mesure qu'on les lit depuis S3:","user":"anonymous","dateUpdated":"2020-01-13T15:18:42+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Les fichiers sont stoquees compresses, on a besoin d&rsquo;un bout de code pour les decompresser en parallel sur les workers au fur et a mesure qu&rsquo;on les lit depuis S3:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1578927690971_1449351020","id":"20181212-102329_808049084","dateCreated":"2020-01-13T15:01:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:79","dateFinished":"2020-01-13T15:18:42+0000","dateStarted":"2020-01-13T15:18:42+0000"},{"text":"%md\n","user":"anonymous","dateUpdated":"2020-01-13T15:29:22+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1578929362877_-1149619074","id":"20200113-152922_860004528","dateCreated":"2020-01-13T15:29:22+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:499"},{"text":"import org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\n// 20181201000000.export.CSV.zip\nval textRDD = sc.binaryFiles(\"s3://\"+s3_name+\"/20181201[0-9]*.export.CSV.zip\"). // charger quelques fichers via une regex\n   flatMap {  // decompresser les fichiers\n       case (name: String, content: PortableDataStream) =>\n          val zis = new ZipInputStream(content.open)\n          Stream.continually(zis.getNextEntry).\n                takeWhile(_ != null).\n                flatMap { _ =>\n                    val br = new BufferedReader(new InputStreamReader(zis))\n                    Stream.continually(br.readLine()).takeWhile(_ != null)\n                }\n    }\ntextRDD.take(1)\n","user":"anonymous","dateUpdated":"2020-01-13T15:30:04+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\ntextRDD: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[74] at flatMap at <console>:93\nres88: Array[String] = Array(806754250\t20171201\t201712\t2017\t2017.9068\t\t\t\t\t\t\t\t\t\t\tUSA\tUNITED STATES\tUSA\t\t\t\t\t\t\t\t1\t100\t100\t10\t3\t-5.0\t4\t1\t4\t-0.66666666666667\t0\t\t\t\t\t\t\t\t3\tNew Haven, Connecticut, United States\tUS\tUSCT\t\t41.3082\t-72.9282\t209231\t3\tNew Haven, Connecticut, United States\tUS\tUSCT\t\t41.3082\t-72.9282\t209231\t20181201000000\thttps://bismarcktribune.com/news/national/the-latest-immigrant-s-supporters-end-courthouse-protest/article_76d71ef6-d0e0-5e02-ab72-4c8a0d31778e.html)\n"}]},"apps":[],"jobName":"paragraph_1578927690972_-1698571712","id":"20171217-232457_1732696781","dateCreated":"2020-01-13T15:01:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:80","dateFinished":"2020-01-13T15:30:07+0000","dateStarted":"2020-01-13T15:30:04+0000","runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-172-31-63-146.ec2.internal:4040/jobs/job?id=10"],"interpreterSettingId":"spark"}}},{"text":"%md A vous de jouer ! Utilisez la documentation GDELT(https://blog.gdeltproject.org/gdelt-2-0-our-global-world-in-realtime/) et commencez a explorer les donnees via les API Spark.","user":"anonymous","dateUpdated":"2020-01-13T15:01:30+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>A vous de jouer ! Utilisez la documentation GDELT(<a href=\"https://blog.gdeltproject.org/gdelt-2-0-our-global-world-in-realtime/\">https://blog.gdeltproject.org/gdelt-2-0-our-global-world-in-realtime/</a>) et commencez a explorer les donnees via les API Spark.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1578927690972_-1363793863","id":"20171218-084519_765381887","dateCreated":"2020-01-13T15:01:30+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:81"}],"name":"gdeltExploration","id":"2EYYTDTKT","noteParams":{},"noteForms":{},"angularObjects":{},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}