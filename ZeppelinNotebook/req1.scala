// ************* MENTIONS

val df_mentions_1 = spark.read.option("header", false).csv("data_req1/20150218230000.mentions.CSV")
.withColumnRenamed("_c0","value")
.withColumn("GLOBALEVENTID", split($"value", "\\t").getItem(0))
.withColumn("EventTimeDate", split($"value", "\\t").getItem(1))
.withColumn("MentionTimeDate", split($"value", "\\t").getItem(2))
.withColumn("MentionType", split($"value", "\\t").getItem(3))
.withColumn("MentionSourceName", split($"value", "\\t").getItem(4))
.withColumn("MentionIdentifier", split($"value", "\\t").getItem(5))
.withColumn("SentenceID", split($"value", "\\t").getItem(6))
.withColumn("Actor1CharOffset", split($"value", "\\t").getItem(7))
.withColumn("Actor2CharOffset", split($"value", "\\t").getItem(8))
.withColumn("ActionCharOffset", split($"value", "\\t").getItem(9))
.withColumn("InRawText", split($"value", "\\t").getItem(10))
.withColumn("Confidence", split($"value", "\\t").getItem(11))
.withColumn("MentionDocLen", split($"value", "\\t").getItem(12))
.withColumn("MentionDocTone", split($"value", "\\t").getItem(13))
.withColumn("MentionDocTranslationInfo", split($"value", "\\t").getItem(14))
.withColumn("Extras", split($"value", "\\t").getItem(15))
.drop("value")


val df_mentions_1_t = spark.read.option("header", false).csv("data_req1/20150218230000.translation.mentions.CSV")
.withColumnRenamed("_c0","value")
.withColumn("GLOBALEVENTID", split($"value", "\\t").getItem(0))
.withColumn("EventTimeDate", split($"value", "\\t").getItem(1))
.withColumn("MentionTimeDate", split($"value", "\\t").getItem(2))
.withColumn("MentionType", split($"value", "\\t").getItem(3))
.withColumn("MentionSourceName", split($"value", "\\t").getItem(4))
.withColumn("MentionIdentifier", split($"value", "\\t").getItem(5))
.withColumn("SentenceID", split($"value", "\\t").getItem(6))
.withColumn("Actor1CharOffset", split($"value", "\\t").getItem(7))
.withColumn("Actor2CharOffset", split($"value", "\\t").getItem(8))
.withColumn("ActionCharOffset", split($"value", "\\t").getItem(9))
.withColumn("InRawText", split($"value", "\\t").getItem(10))
.withColumn("Confidence", split($"value", "\\t").getItem(11))
.withColumn("MentionDocLen", split($"value", "\\t").getItem(12))
.withColumn("MentionDocTone", split($"value", "\\t").getItem(13))
.withColumn("MentionDocTranslationInfo", split($"value", "\\t").getItem(14))
.withColumn("Extras", split($"value", "\\t").getItem(15))
.drop("value")



// **************

val df_mentions_2 = spark.read.option("header", false).csv("data_req1/20150224123000.mentions.CSV")
.withColumnRenamed("_c0","value")
.withColumn("GLOBALEVENTID", split($"value", "\\t").getItem(0))
.withColumn("EventTimeDate", split($"value", "\\t").getItem(1))
.withColumn("MentionTimeDate", split($"value", "\\t").getItem(2))
.withColumn("MentionType", split($"value", "\\t").getItem(3))
.withColumn("MentionSourceName", split($"value", "\\t").getItem(4))
.withColumn("MentionIdentifier", split($"value", "\\t").getItem(5))
.withColumn("SentenceID", split($"value", "\\t").getItem(6))
.withColumn("Actor1CharOffset", split($"value", "\\t").getItem(7))
.withColumn("Actor2CharOffset", split($"value", "\\t").getItem(8))
.withColumn("ActionCharOffset", split($"value", "\\t").getItem(9))
.withColumn("InRawText", split($"value", "\\t").getItem(10))
.withColumn("Confidence", split($"value", "\\t").getItem(11))
.withColumn("MentionDocLen", split($"value", "\\t").getItem(12))
.withColumn("MentionDocTone", split($"value", "\\t").getItem(13))
.withColumn("MentionDocTranslationInfo", split($"value", "\\t").getItem(14))
.withColumn("Extras", split($"value", "\\t").getItem(15))
.drop("value")

val df_mentions_2_t = spark.read.option("header", false).csv("data_req1/20150224123000.translation.mentions.CSV")
.withColumnRenamed("_c0","value")
.withColumn("GLOBALEVENTID", split($"value", "\\t").getItem(0))
.withColumn("EventTimeDate", split($"value", "\\t").getItem(1))
.withColumn("MentionTimeDate", split($"value", "\\t").getItem(2))
.withColumn("MentionType", split($"value", "\\t").getItem(3))
.withColumn("MentionSourceName", split($"value", "\\t").getItem(4))
.withColumn("MentionIdentifier", split($"value", "\\t").getItem(5))
.withColumn("SentenceID", split($"value", "\\t").getItem(6))
.withColumn("Actor1CharOffset", split($"value", "\\t").getItem(7))
.withColumn("Actor2CharOffset", split($"value", "\\t").getItem(8))
.withColumn("ActionCharOffset", split($"value", "\\t").getItem(9))
.withColumn("InRawText", split($"value", "\\t").getItem(10))
.withColumn("Confidence", split($"value", "\\t").getItem(11))
.withColumn("MentionDocLen", split($"value", "\\t").getItem(12))
.withColumn("MentionDocTone", split($"value", "\\t").getItem(13))
.withColumn("MentionDocTranslationInfo", split($"value", "\\t").getItem(14))
.withColumn("Extras", split($"value", "\\t").getItem(15))
.drop("value")

// ************************** EVENTS

val df_events_1 = spark.read.option("header", false).csv("data_req1/20150218230000.export.CSV").withColumn("joined_column",concat($"_c0",lit("\\t"),$"_c1",lit("\\t"),$"_c2",lit("\\t"),$"_c3",lit("\\t"),$"_c4")).withColumnRenamed("joined_column","value")
.select("value")
.withColumn("GLOBALEVENTID", split($"value", "\\t").getItem(0))
.withColumn("Day", split($"value", "\\t").getItem(1))
.withColumn("MonthYear", split($"value", "\\t").getItem(2))
.withColumn("Year", split($"value", "\\t").getItem(3))
.withColumn("FractionDate", split($"value", "\\t").getItem(4))
.withColumn("Actor1Code", split($"value", "\\t").getItem(5))
.withColumn("Actor1Name", split($"value", "\\t").getItem(6))
.withColumn("Actor1CountryCode", split($"value", "\\t").getItem(7))
.withColumn("Actor1KnownGroupCode", split($"value", "\\t").getItem(8))
.withColumn("Actor1EthnicCode", split($"value", "\\t").getItem(9))
.withColumn("Actor1Religion1Code", split($"value", "\\t").getItem(10))
.withColumn("Actor1Religion2Code", split($"value", "\\t").getItem(11))
.withColumn("Actor1Type1Code", split($"value", "\\t").getItem(12))
.withColumn("Actor1Type2Code", split($"value", "\\t").getItem(13))
.withColumn("Actor1Type3Code", split($"value", "\\t").getItem(14))
.withColumn("Actor2Code", split($"value", "\\t").getItem(15))
.withColumn("Actor2Name", split($"value", "\\t").getItem(16))
.withColumn("Actor2CountryCode", split($"value", "\\t").getItem(17))
.withColumn("Actor2KnownGroupCode", split($"value", "\\t").getItem(18))
.withColumn("Actor2EthnicCode", split($"value", "\\t").getItem(19))
.withColumn("Actor2Religion1Code", split($"value", "\\t").getItem(20))
.withColumn("Actor2Religion2Code", split($"value", "\\t").getItem(21))
.withColumn("Actor2Type1Code", split($"value", "\\t").getItem(22))
.withColumn("Actor2Type2Code", split($"value", "\\t").getItem(23))
.withColumn("Actor2Type3Code", split($"value", "\\t").getItem(24))
.withColumn("IsRootEvent", split($"value", "\\t").getItem(25))
.withColumn("EventCode", split($"value", "\\t").getItem(26))
.withColumn("EventBaseCode", split($"value", "\\t").getItem(27))
.withColumn("EventRootCode", split($"value", "\\t").getItem(28))
.withColumn("QuadClass", split($"value", "\\t").getItem(29))
.withColumn("GoldsteinScale", split($"value", "\\t").getItem(30))
.withColumn("NumMentions", split($"value", "\\t").getItem(31))
.withColumn("NumSources", split($"value", "\\t").getItem(32))
.withColumn("NumArticles", split($"value", "\\t").getItem(33))
.withColumn("AvgTone", split($"value", "\\t").getItem(34))
.withColumn("Actor1Geo_Type", split($"value", "\\t").getItem(35))
.withColumn("Actor1Geo_FullName", split($"value", "\\t").getItem(36))
.withColumn("Actor1Geo_CountryCode", split($"value", "\\t").getItem(37))
.withColumn("Actor1Geo_ADM1Code", split($"value", "\\t").getItem(38))
.withColumn("Actor1Geo_ADM2Code", split($"value", "\\t").getItem(39))
.withColumn("Actor1Geo_Lat", split($"value", "\\t").getItem(40))
.withColumn("Actor1Geo_Long", split($"value", "\\t").getItem(41))
.withColumn("Actor1Geo_FeatureID", split($"value", "\\t").getItem(42))
.withColumn("Actor2Geo_Type", split($"value", "\\t").getItem(43))
.withColumn("Actor2Geo_FullName", split($"value", "\\t").getItem(44))
.withColumn("Actor2Geo_CountryCode", split($"value", "\\t").getItem(45))
.withColumn("Actor2Geo_ADM1Code", split($"value", "\\t").getItem(46))
.withColumn("Actor2Geo_ADM2Code", split($"value", "\\t").getItem(47))
.withColumn("Actor2Geo_Lat", split($"value", "\\t").getItem(48))
.withColumn("Actor2Geo_Long", split($"value", "\\t").getItem(49))
.withColumn("Actor2Geo_FeatureID", split($"value", "\\t").getItem(50))
.withColumn("ActionGeo_Type", split($"value", "\\t").getItem(51))
.withColumn("ActionGeo_FullName", split($"value", "\\t").getItem(52))
.withColumn("ActionGeo_CountryCode", split($"value", "\\t").getItem(53))
.withColumn("ActionGeo_ADM1Code", split($"value", "\\t").getItem(54))
.withColumn("ActionGeo_ADM2Code", split($"value", "\\t").getItem(55))
.withColumn("ActionGeo_Lat", split($"value", "\\t").getItem(56))
.withColumn("ActionGeo_Long", split($"value", "\\t").getItem(57))
.withColumn("ActionGeo_FeatureID", split($"value", "\\t").getItem(58))
.withColumn("DATEADDED", split($"value", "\\t").getItem(59))
.withColumn("SOURCEURL", split($"value", "\\t").getItem(60))
.drop("value")

val df_events_1_t = spark.read.option("header", false).csv("data_req1/20150218230000.translation.export.CSV")
.withColumn("joined_column",concat($"_c0",lit("\\t"),$"_c1",lit("\\t"),$"_c2",lit("\\t"),$"_c3",lit("\\t"),$"_c4"))
.withColumnRenamed("joined_column","value")
.select("value")
.withColumn("GLOBALEVENTID", split($"value", "\\t").getItem(0))
.withColumn("Day", split($"value", "\\t").getItem(1))
.withColumn("MonthYear", split($"value", "\\t").getItem(2))
.withColumn("Year", split($"value", "\\t").getItem(3))
.withColumn("FractionDate", split($"value", "\\t").getItem(4))
.withColumn("Actor1Code", split($"value", "\\t").getItem(5))
.withColumn("Actor1Name", split($"value", "\\t").getItem(6))
.withColumn("Actor1CountryCode", split($"value", "\\t").getItem(7))
.withColumn("Actor1KnownGroupCode", split($"value", "\\t").getItem(8))
.withColumn("Actor1EthnicCode", split($"value", "\\t").getItem(9))
.withColumn("Actor1Religion1Code", split($"value", "\\t").getItem(10))
.withColumn("Actor1Religion2Code", split($"value", "\\t").getItem(11))
.withColumn("Actor1Type1Code", split($"value", "\\t").getItem(12))
.withColumn("Actor1Type2Code", split($"value", "\\t").getItem(13))
.withColumn("Actor1Type3Code", split($"value", "\\t").getItem(14))
.withColumn("Actor2Code", split($"value", "\\t").getItem(15))
.withColumn("Actor2Name", split($"value", "\\t").getItem(16))
.withColumn("Actor2CountryCode", split($"value", "\\t").getItem(17))
.withColumn("Actor2KnownGroupCode", split($"value", "\\t").getItem(18))
.withColumn("Actor2EthnicCode", split($"value", "\\t").getItem(19))
.withColumn("Actor2Religion1Code", split($"value", "\\t").getItem(20))
.withColumn("Actor2Religion2Code", split($"value", "\\t").getItem(21))
.withColumn("Actor2Type1Code", split($"value", "\\t").getItem(22))
.withColumn("Actor2Type2Code", split($"value", "\\t").getItem(23))
.withColumn("Actor2Type3Code", split($"value", "\\t").getItem(24))
.withColumn("IsRootEvent", split($"value", "\\t").getItem(25))
.withColumn("EventCode", split($"value", "\\t").getItem(26))
.withColumn("EventBaseCode", split($"value", "\\t").getItem(27))
.withColumn("EventRootCode", split($"value", "\\t").getItem(28))
.withColumn("QuadClass", split($"value", "\\t").getItem(29))
.withColumn("GoldsteinScale", split($"value", "\\t").getItem(30))
.withColumn("NumMentions", split($"value", "\\t").getItem(31))
.withColumn("NumSources", split($"value", "\\t").getItem(32))
.withColumn("NumArticles", split($"value", "\\t").getItem(33))
.withColumn("AvgTone", split($"value", "\\t").getItem(34))
.withColumn("Actor1Geo_Type", split($"value", "\\t").getItem(35))
.withColumn("Actor1Geo_FullName", split($"value", "\\t").getItem(36))
.withColumn("Actor1Geo_CountryCode", split($"value", "\\t").getItem(37))
.withColumn("Actor1Geo_ADM1Code", split($"value", "\\t").getItem(38))
.withColumn("Actor1Geo_ADM2Code", split($"value", "\\t").getItem(39))
.withColumn("Actor1Geo_Lat", split($"value", "\\t").getItem(40))
.withColumn("Actor1Geo_Long", split($"value", "\\t").getItem(41))
.withColumn("Actor1Geo_FeatureID", split($"value", "\\t").getItem(42))
.withColumn("Actor2Geo_Type", split($"value", "\\t").getItem(43))
.withColumn("Actor2Geo_FullName", split($"value", "\\t").getItem(44))
.withColumn("Actor2Geo_CountryCode", split($"value", "\\t").getItem(45))
.withColumn("Actor2Geo_ADM1Code", split($"value", "\\t").getItem(46))
.withColumn("Actor2Geo_ADM2Code", split($"value", "\\t").getItem(47))
.withColumn("Actor2Geo_Lat", split($"value", "\\t").getItem(48))
.withColumn("Actor2Geo_Long", split($"value", "\\t").getItem(49))
.withColumn("Actor2Geo_FeatureID", split($"value", "\\t").getItem(50))
.withColumn("ActionGeo_Type", split($"value", "\\t").getItem(51))
.withColumn("ActionGeo_FullName", split($"value", "\\t").getItem(52))
.withColumn("ActionGeo_CountryCode", split($"value", "\\t").getItem(53))
.withColumn("ActionGeo_ADM1Code", split($"value", "\\t").getItem(54))
.withColumn("ActionGeo_ADM2Code", split($"value", "\\t").getItem(55))
.withColumn("ActionGeo_Lat", split($"value", "\\t").getItem(56))
.withColumn("ActionGeo_Long", split($"value", "\\t").getItem(57))
.withColumn("ActionGeo_FeatureID", split($"value", "\\t").getItem(58))
.withColumn("DATEADDED", split($"value", "\\t").getItem(59))
.withColumn("SOURCEURL", split($"value", "\\t").getItem(60))
.drop("value")

val df_events_2 = spark.read.option("header", false).csv("data_req1/20150224123000.export.CSV")
.withColumnRenamed("_c0","value")
.withColumn("GLOBALEVENTID", split($"value", "\\t").getItem(0))
.withColumn("Day", split($"value", "\\t").getItem(1))
.withColumn("MonthYear", split($"value", "\\t").getItem(2))
.withColumn("Year", split($"value", "\\t").getItem(3))
.withColumn("FractionDate", split($"value", "\\t").getItem(4))
.withColumn("Actor1Code", split($"value", "\\t").getItem(5))
.withColumn("Actor1Name", split($"value", "\\t").getItem(6))
.withColumn("Actor1CountryCode", split($"value", "\\t").getItem(7))
.withColumn("Actor1KnownGroupCode", split($"value", "\\t").getItem(8))
.withColumn("Actor1EthnicCode", split($"value", "\\t").getItem(9))
.withColumn("Actor1Religion1Code", split($"value", "\\t").getItem(10))
.withColumn("Actor1Religion2Code", split($"value", "\\t").getItem(11))
.withColumn("Actor1Type1Code", split($"value", "\\t").getItem(12))
.withColumn("Actor1Type2Code", split($"value", "\\t").getItem(13))
.withColumn("Actor1Type3Code", split($"value", "\\t").getItem(14))
.withColumn("Actor2Code", split($"value", "\\t").getItem(15))
.withColumn("Actor2Name", split($"value", "\\t").getItem(16))
.withColumn("Actor2CountryCode", split($"value", "\\t").getItem(17))
.withColumn("Actor2KnownGroupCode", split($"value", "\\t").getItem(18))
.withColumn("Actor2EthnicCode", split($"value", "\\t").getItem(19))
.withColumn("Actor2Religion1Code", split($"value", "\\t").getItem(20))
.withColumn("Actor2Religion2Code", split($"value", "\\t").getItem(21))
.withColumn("Actor2Type1Code", split($"value", "\\t").getItem(22))
.withColumn("Actor2Type2Code", split($"value", "\\t").getItem(23))
.withColumn("Actor2Type3Code", split($"value", "\\t").getItem(24))
.withColumn("IsRootEvent", split($"value", "\\t").getItem(25))
.withColumn("EventCode", split($"value", "\\t").getItem(26))
.withColumn("EventBaseCode", split($"value", "\\t").getItem(27))
.withColumn("EventRootCode", split($"value", "\\t").getItem(28))
.withColumn("QuadClass", split($"value", "\\t").getItem(29))
.withColumn("GoldsteinScale", split($"value", "\\t").getItem(30))
.withColumn("NumMentions", split($"value", "\\t").getItem(31))
.withColumn("NumSources", split($"value", "\\t").getItem(32))
.withColumn("NumArticles", split($"value", "\\t").getItem(33))
.withColumn("AvgTone", split($"value", "\\t").getItem(34))
.withColumn("Actor1Geo_Type", split($"value", "\\t").getItem(35))
.withColumn("Actor1Geo_FullName", split($"value", "\\t").getItem(36))
.withColumn("Actor1Geo_CountryCode", split($"value", "\\t").getItem(37))
.withColumn("Actor1Geo_ADM1Code", split($"value", "\\t").getItem(38))
.withColumn("Actor1Geo_ADM2Code", split($"value", "\\t").getItem(39))
.withColumn("Actor1Geo_Lat", split($"value", "\\t").getItem(40))
.withColumn("Actor1Geo_Long", split($"value", "\\t").getItem(41))
.withColumn("Actor1Geo_FeatureID", split($"value", "\\t").getItem(42))
.withColumn("Actor2Geo_Type", split($"value", "\\t").getItem(43))
.withColumn("Actor2Geo_FullName", split($"value", "\\t").getItem(44))
.withColumn("Actor2Geo_CountryCode", split($"value", "\\t").getItem(45))
.withColumn("Actor2Geo_ADM1Code", split($"value", "\\t").getItem(46))
.withColumn("Actor2Geo_ADM2Code", split($"value", "\\t").getItem(47))
.withColumn("Actor2Geo_Lat", split($"value", "\\t").getItem(48))
.withColumn("Actor2Geo_Long", split($"value", "\\t").getItem(49))
.withColumn("Actor2Geo_FeatureID", split($"value", "\\t").getItem(50))
.withColumn("ActionGeo_Type", split($"value", "\\t").getItem(51))
.withColumn("ActionGeo_FullName", split($"value", "\\t").getItem(52))
.withColumn("ActionGeo_CountryCode", split($"value", "\\t").getItem(53))
.withColumn("ActionGeo_ADM1Code", split($"value", "\\t").getItem(54))
.withColumn("ActionGeo_ADM2Code", split($"value", "\\t").getItem(55))
.withColumn("ActionGeo_Lat", split($"value", "\\t").getItem(56))
.withColumn("ActionGeo_Long", split($"value", "\\t").getItem(57))
.withColumn("ActionGeo_FeatureID", split($"value", "\\t").getItem(58))
.withColumn("DATEADDED", split($"value", "\\t").getItem(59))
.withColumn("SOURCEURL", split($"value", "\\t").getItem(60))
.drop("value")

val df_events_2_t = spark.read.option("header", false).csv("data_req1/20150224123000.translation.export.CSV")
.withColumn("joined_column",concat($"_c0",lit("\\t"),$"_c1",lit("\\t"),$"_c2",lit("\\t"),$"_c3",lit("\\t"),$"_c4"))
.withColumnRenamed("joined_column","value")
.select("value")
.withColumn("GLOBALEVENTID", split($"value", "\\t").getItem(0))
.withColumn("Day", split($"value", "\\t").getItem(1))
.withColumn("MonthYear", split($"value", "\\t").getItem(2))
.withColumn("Year", split($"value", "\\t").getItem(3))
.withColumn("FractionDate", split($"value", "\\t").getItem(4))
.withColumn("Actor1Code", split($"value", "\\t").getItem(5))
.withColumn("Actor1Name", split($"value", "\\t").getItem(6))
.withColumn("Actor1CountryCode", split($"value", "\\t").getItem(7))
.withColumn("Actor1KnownGroupCode", split($"value", "\\t").getItem(8))
.withColumn("Actor1EthnicCode", split($"value", "\\t").getItem(9))
.withColumn("Actor1Religion1Code", split($"value", "\\t").getItem(10))
.withColumn("Actor1Religion2Code", split($"value", "\\t").getItem(11))
.withColumn("Actor1Type1Code", split($"value", "\\t").getItem(12))
.withColumn("Actor1Type2Code", split($"value", "\\t").getItem(13))
.withColumn("Actor1Type3Code", split($"value", "\\t").getItem(14))
.withColumn("Actor2Code", split($"value", "\\t").getItem(15))
.withColumn("Actor2Name", split($"value", "\\t").getItem(16))
.withColumn("Actor2CountryCode", split($"value", "\\t").getItem(17))
.withColumn("Actor2KnownGroupCode", split($"value", "\\t").getItem(18))
.withColumn("Actor2EthnicCode", split($"value", "\\t").getItem(19))
.withColumn("Actor2Religion1Code", split($"value", "\\t").getItem(20))
.withColumn("Actor2Religion2Code", split($"value", "\\t").getItem(21))
.withColumn("Actor2Type1Code", split($"value", "\\t").getItem(22))
.withColumn("Actor2Type2Code", split($"value", "\\t").getItem(23))
.withColumn("Actor2Type3Code", split($"value", "\\t").getItem(24))
.withColumn("IsRootEvent", split($"value", "\\t").getItem(25))
.withColumn("EventCode", split($"value", "\\t").getItem(26))
.withColumn("EventBaseCode", split($"value", "\\t").getItem(27))
.withColumn("EventRootCode", split($"value", "\\t").getItem(28))
.withColumn("QuadClass", split($"value", "\\t").getItem(29))
.withColumn("GoldsteinScale", split($"value", "\\t").getItem(30))
.withColumn("NumMentions", split($"value", "\\t").getItem(31))
.withColumn("NumSources", split($"value", "\\t").getItem(32))
.withColumn("NumArticles", split($"value", "\\t").getItem(33))
.withColumn("AvgTone", split($"value", "\\t").getItem(34))
.withColumn("Actor1Geo_Type", split($"value", "\\t").getItem(35))
.withColumn("Actor1Geo_FullName", split($"value", "\\t").getItem(36))
.withColumn("Actor1Geo_CountryCode", split($"value", "\\t").getItem(37))
.withColumn("Actor1Geo_ADM1Code", split($"value", "\\t").getItem(38))
.withColumn("Actor1Geo_ADM2Code", split($"value", "\\t").getItem(39))
.withColumn("Actor1Geo_Lat", split($"value", "\\t").getItem(40))
.withColumn("Actor1Geo_Long", split($"value", "\\t").getItem(41))
.withColumn("Actor1Geo_FeatureID", split($"value", "\\t").getItem(42))
.withColumn("Actor2Geo_Type", split($"value", "\\t").getItem(43))
.withColumn("Actor2Geo_FullName", split($"value", "\\t").getItem(44))
.withColumn("Actor2Geo_CountryCode", split($"value", "\\t").getItem(45))
.withColumn("Actor2Geo_ADM1Code", split($"value", "\\t").getItem(46))
.withColumn("Actor2Geo_ADM2Code", split($"value", "\\t").getItem(47))
.withColumn("Actor2Geo_Lat", split($"value", "\\t").getItem(48))
.withColumn("Actor2Geo_Long", split($"value", "\\t").getItem(49))
.withColumn("Actor2Geo_FeatureID", split($"value", "\\t").getItem(50))
.withColumn("ActionGeo_Type", split($"value", "\\t").getItem(51))
.withColumn("ActionGeo_FullName", split($"value", "\\t").getItem(52))
.withColumn("ActionGeo_CountryCode", split($"value", "\\t").getItem(53))
.withColumn("ActionGeo_ADM1Code", split($"value", "\\t").getItem(54))
.withColumn("ActionGeo_ADM2Code", split($"value", "\\t").getItem(55))
.withColumn("ActionGeo_Lat", split($"value", "\\t").getItem(56))
.withColumn("ActionGeo_Long", split($"value", "\\t").getItem(57))
.withColumn("ActionGeo_FeatureID", split($"value", "\\t").getItem(58))
.withColumn("DATEADDED", split($"value", "\\t").getItem(59))
.withColumn("SOURCEURL", split($"value", "\\t").getItem(60))
.drop("value")


// CONCATENATION

val dfMentions = df_mentions_1.union(df_mentions_1_t).union(df_mentions_2).union(df_mentions_2_t)
val dfEvents = df_events_1.union(df_events_1_t).union(df_events_2).union(df_events_2_t)


// REQUETE

val dfJoin = dfEvents.join(dfMentions, Seq("GLOBALEVENTID")).withColumnRenamed("Day","SQLDATE")
val dfGroup = dfJoin.groupBy("SQLDATE","Actor1CountryCode","MentionDocTranslationInfo").agg(count("GLOBALEVENTID"))
