{"paragraphs":[{"text":"%md\n## Querry 3\nHere we will try to resolve the following query:\n\nFor an input source (gkg.SourceCommonName), display themes, persons, locations, that are mentions in this article source. You will also display the number of article and the average tone for each theme/person and location. A aggregation on day, month and year should be possible.\n\nWe will use the table GKG to answer this query.\n\n","user":"anonymous","dateUpdated":"2020-01-18T17:20:28+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Querry 3</h2>\n<p>Here we will try to resolve the following query:</p>\n<p>For an input source (gkg.SourceCommonName), display themes, persons, locations, that are mentions in this article source. You will also display the number of article and the average tone for each theme/person and location. A aggregation on day, month and year should be possible.</p>\n<p>We will use the table GKG to answer this query.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1579355018639_-398547939","id":"20181212-102323_67420128","dateCreated":"2020-01-18T13:43:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:236","dateFinished":"2020-01-18T17:20:28+0000","dateStarted":"2020-01-18T17:20:28+0000"},{"text":"val AWS_ID = \"TODO\"\nval AWS_KEY = \"TODO\"\nval AWS_TOKEN = \"TODO\"\nval s3_name = \"TODO\"\n\n\nsc.hadoopConfiguration.set(\"fs.s3a.aws.credentials.provider\", \"org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider\")\nsc.hadoopConfiguration.set(\"fs.s3a.access.key\", AWS_ID) // mettre votre ID du fichier credentials.csv\nsc.hadoopConfiguration.set(\"fs.s3a.secret.key\", AWS_KEY) // mettre votre secret du fichier credentials.csv\nsc.hadoopConfiguration.set(\"fs.s3a.session.token\", AWS_TOKEN)","user":"anonymous","dateUpdated":"2020-01-18T17:22:10+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"AWS_ID: String = TODO\nAWS_KEY: String = TODO\nAWS_TOKEN: String = TODO\ns3_name: String = TODO\n"}]},"apps":[],"jobName":"paragraph_1579355018646_-447806250","id":"20171217-230735_1688540039","dateCreated":"2020-01-18T13:43:38+0000","dateStarted":"2020-01-18T17:22:10+0000","dateFinished":"2020-01-18T17:22:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:237"},{"text":"%md Exportation des données de la table Relation","user":"anonymous","dateUpdated":"2020-01-18T13:43:38+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Exportation des données de la table Relation</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1579355018648_-1985199152","id":"20200117-103749_1442620581","dateCreated":"2020-01-18T13:43:38+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:242"},{"text":"import org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\n\nval RDDgkg = sc.binaryFiles(\"s3a://\" + s3_name + \"/2018120105*.gkg.csv.zip\").\n   flatMap {  // decompresser les fichiers\n       case (name: String, content: PortableDataStream) =>\n          val zis = new ZipInputStream(content.open)\n          Stream.continually(zis.getNextEntry).\n                takeWhile(_ != null).\n                flatMap { _ =>\n                    val br = new BufferedReader(new InputStreamReader(zis))\n                    Stream.continually(br.readLine()).takeWhile(_ != null)\n                }\n    }\n    \nval dfgkg = RDDgkg.toDF.withColumn(\"GLOBALEVENTID\", split($\"value\", \"\\\\t\").getItem(0))\n.withColumn(\"GKGRECORDID\", split($\"value\", \"\\\\t\").getItem(0))\n.withColumn(\"DATE\", split($\"value\", \"\\\\t\").getItem(1))\n.withColumn(\"SourceCollectionIdentifier\", split($\"value\", \"\\\\t\").getItem(2))\n.withColumn(\"SourceCommonName\", split($\"value\", \"\\\\t\").getItem(3))\n.withColumn(\"DocumentIdentifier\", split($\"value\", \"\\\\t\").getItem(4))\n.withColumn(\"Counts\", split($\"value\", \"\\\\t\").getItem(5))\n.withColumn(\"V2Counts\", split($\"value\", \"\\\\t\").getItem(6))\n.withColumn(\"Themes\", split($\"value\", \"\\\\t\").getItem(7))\n.withColumn(\"V2Themes\", split($\"value\", \"\\\\t\").getItem(8))\n.withColumn(\"Locations\", split($\"value\", \"\\\\t\").getItem(9))\n.withColumn(\"V2Locations\", split($\"value\", \"\\\\t\").getItem(10))\n.withColumn(\"Persons\", split($\"value\", \"\\\\t\").getItem(11))\n.withColumn(\"V2Persons\", split($\"value\", \"\\\\t\").getItem(12))\n.withColumn(\"Organizations\", split($\"value\", \"\\\\t\").getItem(13))\n.withColumn(\"V2Organizations\", split($\"value\", \"\\\\t\").getItem(14))\n.withColumn(\"V2Tone\", split($\"value\", \"\\\\t\").getItem(15))\n.withColumn(\"Dates\", split($\"value\", \"\\\\t\").getItem(16))\n.withColumn(\"GCAM\", split($\"value\", \"\\\\t\").getItem(17))\n.withColumn(\"SharingImage\", split($\"value\", \"\\\\t\").getItem(18))\n.withColumn(\"RelatedImages\", split($\"value\", \"\\\\t\").getItem(19))\n.withColumn(\"SocialImageEmbeds\", split($\"value\", \"\\\\t\").getItem(20))\n.withColumn(\"SocialVideoEmbeds\", split($\"value\", \"\\\\t\").getItem(21))\n.withColumn(\"Quotations\", split($\"value\", \"\\\\t\").getItem(22))\n.withColumn(\"AllNames\", split($\"value\", \"\\\\t\").getItem(23))\n.withColumn(\"Amounts\", split($\"value\", \"\\\\t\").getItem(24))\n.withColumn(\"TranslationInfo\", split($\"value\", \"\\\\t\").getItem(25))\n.withColumn(\"Extras\", split($\"value\", \"\\\\t\").getItem(26))\n.drop(\"value\")","user":"anonymous","dateUpdated":"2020-01-18T17:15:55+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"RDDgkg: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[13] at flatMap at <console>:44\ndfgkg: org.apache.spark.sql.DataFrame = [GLOBALEVENTID: string, GKGRECORDID: string ... 26 more fields]\n"}]},"apps":[],"jobName":"paragraph_1579355018649_1641448246","id":"20200117-103556_2139418060","dateCreated":"2020-01-18T13:43:38+0000","dateStarted":"2020-01-18T14:48:35+0000","dateFinished":"2020-01-18T14:48:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:243"},{"text":"import org.apache.spark.sql.functions._\n\n\nval df_article_by_theme = dfgkg\n    .select(\"GKGRECORDID\", \"SourceCommonName\", \"Themes\", \"V2Tone\", \"DATE\")\n    .withColumn(\"Theme\", explode(split($\"Themes\", \";\")))\n    .filter(!($\"Theme\".isNaN || $\"Theme\".isNull || $\"Theme\" === \"\"))\n    .withColumn(\"Tone\", substring_index($\"V2Tone\", \",\", 1))\n    .withColumn(\"Year\", substring($\"DATE\", 0, 4))\n    .withColumn(\"Month\", substring($\"DATE\", 5, 2))\n    .withColumn(\"Day\", substring($\"DATE\", 7, 2))\n    .groupBy(\"SourceCommonName\",\"Theme\", \"Year\", \"Month\", \"Day\")\n    .agg(count($\"GKGRECORDID\").alias(\"NumberArticle\"), \n        sum($\"Tone\").alias(\"SumTone\"))\n\nval df_article_by_person = dfgkg\n    .select(\"GKGRECORDID\", \"SourceCommonName\",\"Persons\", \"V2Tone\", \"DATE\")\n    .withColumn(\"Person\", explode(split($\"Persons\", \";\")))\n    .filter(!($\"Person\".isNaN || $\"Person\".isNull || $\"Person\" === \"\"))\n    .withColumn(\"Tone\", substring_index($\"V2Tone\", \",\", 1))\n    .withColumn(\"Year\", substring($\"DATE\", 0, 4))\n    .withColumn(\"Month\", substring($\"DATE\", 5, 2))\n    .withColumn(\"Day\", substring($\"DATE\", 7, 2))\n    .groupBy(\"SourceCommonName\",\"Person\", \"Year\", \"Month\", \"Day\")\n    .agg(count($\"GKGRECORDID\").alias(\"NumberArticle\"), \n        sum($\"Tone\").alias(\"SumTone\"))\n\nval df_article_by_location = dfgkg\n    .select(\"GKGRECORDID\", \"SourceCommonName\", \"V2Locations\", \"V2Tone\", \"DATE\")\n    .withColumn(\"Locations\", explode(split($\"V2Locations\", \";\")))\n    .filter(!($\"Locations\".isNaN || $\"Locations\".isNull || $\"Locations\" === \"\"))\n    .withColumn(\"Location\", element_at(split($\"Locations\", \"#\"),2))\n    .withColumn(\"Tone\", substring_index($\"V2Tone\", \",\", 1))\n    .withColumn(\"Year\", substring($\"DATE\", 0, 4))\n    .withColumn(\"Month\", substring($\"DATE\", 5, 2))\n    .withColumn(\"Day\", substring($\"DATE\", 7, 2))\n    .groupBy(\"SourceCommonName\",\"Location\", \"Year\", \"Month\", \"Day\")\n    .agg(count($\"GKGRECORDID\").alias(\"NumberArticle\"), \n        sum($\"Tone\").alias(\"SumTone\"))","user":"anonymous","dateUpdated":"2020-01-18T16:40:46+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":325,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions._\ndf_article_by_theme: org.apache.spark.sql.DataFrame = [SourceCommonName: string, Theme: string ... 5 more fields]\ndf_article_by_person: org.apache.spark.sql.DataFrame = [SourceCommonName: string, Person: string ... 5 more fields]\ndf_article_by_location: org.apache.spark.sql.DataFrame = [SourceCommonName: string, Location: string ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1579355018649_437260026","id":"20200117-102214_1513863359","dateCreated":"2020-01-18T13:43:38+0000","dateStarted":"2020-01-18T16:40:46+0000","dateFinished":"2020-01-18T16:40:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:244"},{"text":"df_article_by_theme.orderBy($\"NumberArticle\".desc).show(5, false)","user":"anonymous","dateUpdated":"2020-01-18T16:40:52+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------+--------------------+----+-----+---+-------------+------------------+\n|SourceCommonName|Theme               |Year|Month|Day|NumberArticle|SumTone           |\n+----------------+--------------------+----+-----+---+-------------+------------------+\n|joker.com       |TAX_FNCACT          |2018|12   |01 |197          |1907.960883902593 |\n|joker.com       |EPU_ECONOMY_HISTORIC|2018|12   |01 |179          |1842.0711974110138|\n|joker.com       |TAX_FNCACT_PIONEER  |2018|12   |01 |176          |1833.333333333344 |\n|joker.com       |TAX_FNCACT_REGISTRAR|2018|12   |01 |176          |1833.333333333344 |\n|indiatimes.com  |TAX_FNCACT          |2018|12   |01 |74           |-65.50780163442678|\n+----------------+--------------------+----+-----+---+-------------+------------------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1579355018650_1284703099","id":"20200118-110415_12826907","dateCreated":"2020-01-18T13:43:38+0000","dateStarted":"2020-01-18T16:40:52+0000","dateFinished":"2020-01-18T16:41:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:246"},{"user":"anonymous","dateUpdated":"2020-01-18T16:41:59+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579355018651_-1308697816","id":"20200118-114007_983119573","dateCreated":"2020-01-18T13:43:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:247","text":"df_article_by_person.orderBy($\"NumberArticle\".desc).show(5, false)","dateFinished":"2020-01-18T16:42:06+0000","dateStarted":"2020-01-18T16:41:59+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------------+---------------------------+----+-----+---+-------------+-------------------+\n|SourceCommonName|Person                     |Year|Month|Day|NumberArticle|SumTone            |\n+----------------+---------------------------+----+-----+---+-------------+-------------------+\n|iheart.com      |john adams                 |2018|12   |01 |19           |-17.902425425146365|\n|iheart.com      |jeb bush                   |2018|12   |01 |19           |-17.902425425146365|\n|iheart.com      |pauline robinson robin bush|2018|12   |01 |19           |-17.902425425146365|\n|iheart.com      |john quincy adams          |2018|12   |01 |19           |-17.902425425146365|\n|iheart.com      |george h w bush            |2018|12   |01 |19           |-17.902425425146365|\n+----------------+---------------------------+----+-----+---+-------------+-------------------+\nonly showing top 5 rows\n\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579360658588_-1786436643","id":"20200118-151738_2046098198","dateCreated":"2020-01-18T15:17:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2166","text":"df_article_by_location.orderBy($\"NumberArticle\".desc).show(5, false)","dateUpdated":"2020-01-18T16:41:39+0000","dateFinished":"2020-01-18T16:41:47+0000","dateStarted":"2020-01-18T16:41:39+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------------------+----------+----+-----+---+-------------+-------------------+\n|SourceCommonName     |Location  |Year|Month|Day|NumberArticle|SumTone            |\n+---------------------+----------+----+-----+---+-------------+-------------------+\n|english.vietnamnet.vn|Vietnam   |2018|12   |01 |214          |471.2886890418726  |\n|indiatimes.com       |India     |2018|12   |01 |188          |181.67684121789893 |\n|english.wafa.ps      |Israel    |2018|12   |01 |151          |-641.7885161287817 |\n|timesca.com          |Kazakhstan|2018|12   |01 |146          |380.3854970207309  |\n|globalsecurity.org   |Russia    |2018|12   |01 |139          |-428.36390570135995|\n+---------------------+----------+----+-----+---+-------------+-------------------+\nonly showing top 5 rows\n\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579360677528_-392956138","id":"20200118-151757_471703789","dateCreated":"2020-01-18T15:17:57+0000","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2279","text":"%sh\n$SPARK_HOME/bin/spark-shell --packages com.datastax.spark:spark-cassandra-connector_2.11:2.4.2\n$SPARK_HOME/bin/spark-submit --packages com.datastax.spark:spark-cassandra-connector_2.11:2.4.2","dateUpdated":"2020-01-18T15:56:56+0000","dateFinished":"2020-01-18T15:57:39+0000","dateStarted":"2020-01-18T15:56:56+0000","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Ivy Default Cache set to: /var/lib/zeppelin/.ivy2/cache\nThe jars for the packages stored in: /var/lib/zeppelin/.ivy2/jars\n:: loading settings :: url = jar:file:/usr/lib/spark/jars/ivy-2.4.0.jar!/org/apache/ivy/core/settings/ivysettings.xml\ncom.datastax.spark#spark-cassandra-connector_2.11 added as a dependency\n:: resolving dependencies :: org.apache.spark#spark-submit-parent-8e89d49b-d54a-42c7-b585-fe7486eb9b5d;1.0\n\tconfs: [default]\n\tfound com.datastax.spark#spark-cassandra-connector_2.11;2.4.2 in central\n\tfound commons-beanutils#commons-beanutils;1.9.3 in central\n\tfound commons-collections#commons-collections;3.2.2 in central\n\tfound com.twitter#jsr166e;1.1.0 in central\n\tfound org.joda#joda-convert;1.2 in central\n\tfound io.netty#netty-all;4.0.33.Final in central\n\tfound joda-time#joda-time;2.3 in central\n\tfound org.scala-lang#scala-reflect;2.11.7 in central\ndownloading https://repo1.maven.org/maven2/com/datastax/spark/spark-cassandra-connector_2.11/2.4.2/spark-cassandra-connector_2.11-2.4.2.jar ...\n\t[SUCCESSFUL ] com.datastax.spark#spark-cassandra-connector_2.11;2.4.2!spark-cassandra-connector_2.11.jar (321ms)\ndownloading https://repo1.maven.org/maven2/commons-beanutils/commons-beanutils/1.9.3/commons-beanutils-1.9.3.jar ...\n\t[SUCCESSFUL ] commons-beanutils#commons-beanutils;1.9.3!commons-beanutils.jar (9ms)\ndownloading https://repo1.maven.org/maven2/com/twitter/jsr166e/1.1.0/jsr166e-1.1.0.jar ...\n\t[SUCCESSFUL ] com.twitter#jsr166e;1.1.0!jsr166e.jar (5ms)\ndownloading https://repo1.maven.org/maven2/org/joda/joda-convert/1.2/joda-convert-1.2.jar ...\n\t[SUCCESSFUL ] org.joda#joda-convert;1.2!joda-convert.jar (6ms)\ndownloading https://repo1.maven.org/maven2/io/netty/netty-all/4.0.33.Final/netty-all-4.0.33.Final.jar ...\n\t[SUCCESSFUL ] io.netty#netty-all;4.0.33.Final!netty-all.jar (59ms)\ndownloading https://repo1.maven.org/maven2/joda-time/joda-time/2.3/joda-time-2.3.jar ...\n\t[SUCCESSFUL ] joda-time#joda-time;2.3!joda-time.jar (29ms)\ndownloading https://repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.11.7/scala-reflect-2.11.7.jar ...\n\t[SUCCESSFUL ] org.scala-lang#scala-reflect;2.11.7!scala-reflect.jar (220ms)\ndownloading https://repo1.maven.org/maven2/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar ...\n\t[SUCCESSFUL ] commons-collections#commons-collections;3.2.2!commons-collections.jar (29ms)\n:: resolution report :: resolve 2538ms :: artifacts dl 694ms\n\t:: modules in use:\n\tcom.datastax.spark#spark-cassandra-connector_2.11;2.4.2 from central in [default]\n\tcom.twitter#jsr166e;1.1.0 from central in [default]\n\tcommons-beanutils#commons-beanutils;1.9.3 from central in [default]\n\tcommons-collections#commons-collections;3.2.2 from central in [default]\n\tio.netty#netty-all;4.0.33.Final from central in [default]\n\tjoda-time#joda-time;2.3 from central in [default]\n\torg.joda#joda-convert;1.2 from central in [default]\n\torg.scala-lang#scala-reflect;2.11.7 from central in [default]\n\t---------------------------------------------------------------------\n\t|                  |            modules            ||   artifacts   |\n\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|\n\t---------------------------------------------------------------------\n\t|      default     |   8   |   8   |   8   |   0   ||   8   |   8   |\n\t---------------------------------------------------------------------\n:: retrieving :: org.apache.spark#spark-submit-parent-8e89d49b-d54a-42c7-b585-fe7486eb9b5d\n\tconfs: [default]\n\t8 artifacts copied, 0 already retrieved (16744kB/46ms)\nSetting default log level to \"WARN\".\nTo adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).\n20/01/18 15:57:16 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.\n20/01/18 15:57:17 WARN Client: Neither spark.yarn.jars nor spark.yarn.archive is set, falling back to uploading libraries under SPARK_HOME.\nSpark context Web UI available at http://ip-172-31-33-89.ec2.internal:4041\nSpark context available as 'sc' (master = yarn, app id = application_1579354949632_0002).\nSpark session available as 'spark'.\nWelcome to\n      ____              __\n     / __/__  ___ _____/ /__\n    _\\ \\/ _ \\/ _ `/ __/  '_/\n   /___/ .__/\\_,_/_/ /_/\\_\\   version 2.4.4\n      /_/\n         \nUsing Scala version 2.11.12 (OpenJDK 64-Bit Server VM, Java 1.8.0_232)\nType in expressions to have them evaluated.\nType :help for more information.\n\nscala> :quit\nError: Missing application resource.\n\nUsage: spark-submit [options] <app jar | python file | R file> [app arguments]\nUsage: spark-submit --kill [submission ID] --master [spark://...]\nUsage: spark-submit --status [submission ID] --master [spark://...]\nUsage: spark-submit run-example [options] example-class [example args]\n\nOptions:\n  --master MASTER_URL         spark://host:port, mesos://host:port, yarn,\n                              k8s://https://host:port, or local (Default: local[*]).\n  --deploy-mode DEPLOY_MODE   Whether to launch the driver program locally (\"client\") or\n                              on one of the worker machines inside the cluster (\"cluster\")\n                              (Default: client).\n  --class CLASS_NAME          Your application's main class (for Java / Scala apps).\n  --name NAME                 A name of your application.\n  --jars JARS                 Comma-separated list of jars to include on the driver\n                              and executor classpaths.\n  --packages                  Comma-separated list of maven coordinates of jars to include\n                              on the driver and executor classpaths. Will search the local\n                              maven repo, then maven central and any additional remote\n                              repositories given by --repositories. The format for the\n                              coordinates should be groupId:artifactId:version.\n  --exclude-packages          Comma-separated list of groupId:artifactId, to exclude while\n                              resolving the dependencies provided in --packages to avoid\n                              dependency conflicts.\n  --repositories              Comma-separated list of additional remote repositories to\n                              search for the maven coordinates given with --packages.\n  --py-files PY_FILES         Comma-separated list of .zip, .egg, or .py files to place\n                              on the PYTHONPATH for Python apps.\n  --files FILES               Comma-separated list of files to be placed in the working\n                              directory of each executor. File paths of these files\n                              in executors can be accessed via SparkFiles.get(fileName).\n\n  --conf PROP=VALUE           Arbitrary Spark configuration property.\n  --properties-file FILE      Path to a file from which to load extra properties. If not\n                              specified, this will look for conf/spark-defaults.conf.\n\n  --driver-memory MEM         Memory for driver (e.g. 1000M, 2G) (Default: 1024M).\n  --driver-java-options       Extra Java options to pass to the driver.\n  --driver-library-path       Extra library path entries to pass to the driver.\n  --driver-class-path         Extra class path entries to pass to the driver. Note that\n                              jars added with --jars are automatically included in the\n                              classpath.\n\n  --executor-memory MEM       Memory per executor (e.g. 1000M, 2G) (Default: 1G).\n\n  --proxy-user NAME           User to impersonate when submitting the application.\n                              This argument does not work with --principal / --keytab.\n\n  --help, -h                  Show this help message and exit.\n  --verbose, -v               Print additional debug output.\n  --version,                  Print the version of current Spark.\n\n Cluster deploy mode only:\n  --driver-cores NUM          Number of cores used by the driver, only in cluster mode\n                              (Default: 1).\n\n Spark standalone or Mesos with cluster deploy mode only:\n  --supervise                 If given, restarts the driver on failure.\n  --kill SUBMISSION_ID        If given, kills the driver specified.\n  --status SUBMISSION_ID      If given, requests the status of the driver specified.\n\n Spark standalone and Mesos only:\n  --total-executor-cores NUM  Total cores for all executors.\n\n Spark standalone and YARN only:\n  --executor-cores NUM        Number of cores per executor. (Default: 1 in YARN mode,\n                              or all available cores on the worker in standalone mode)\n\n YARN-only:\n  --queue QUEUE_NAME          The YARN queue to submit to (Default: \"default\").\n  --num-executors NUM         Number of executors to launch (Default: 2).\n                              If dynamic allocation is enabled, the initial number of\n                              executors will be at least NUM.\n  --archives ARCHIVES         Comma separated list of archives to be extracted into the\n                              working directory of each executor.\n  --principal PRINCIPAL       Principal to be used to login to KDC, while running on\n                              secure HDFS.\n  --keytab KEYTAB             The full path to the file that contains the keytab for the\n                              principal specified above. This keytab will be copied to\n                              the node running the Application Master via the Secure\n                              Distributed Cache, for renewing the login tickets and the\n                              delegation tokens periodically.\n      \n"},{"type":"TEXT","data":"ExitValue: 1"}]}},{"text":"CassandraConnector(conf).withSessionDo { session =>\n  session.execute(\n  \"\"\"CREATE KEYSPACE IF NOT EXISTS gdelt \n  WITH REPLICATION = \n  {'class': 'SimpleStrategy', 'replication_factor': 2 };\"\"\")\n  session.execute(\n  \"\"\"CREATE TABLE article_by_theme (\n    source_common_name text,\n    year int,\n    month int,\n    day int,\n    theme text,\n    num_article int,\n    sum_tone int,\n    PRIMARY KEY (source_common_name, year, month, day, theme)\n);\"\"\")\n}","user":"anonymous","dateUpdated":"2020-01-18T17:04:28+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579363016345_187662758","id":"20200118-155656_977328761","dateCreated":"2020-01-18T15:56:56+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3344"}],"name":"gdeltQuery3","id":"2EXCWMWBF","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}